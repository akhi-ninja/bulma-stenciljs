/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface BlButton {
        "class": 'is-primary' | 'is-dark' | 'is-light' | 'is-black' | 'is-text' | 'is-ghost' | 'is-link' | 'is-info' | 'is-success' | 'is-warning' | 'is-danger';
        "disabled": boolean;
        "shape": 'square' | 'round';
        "size": 'small' | 'default' | 'large';
        "type": 'button' | 'reset' | 'submit';
    }
    interface BlInput {
        "class": string;
        "disabled": boolean;
        "placeholder": string;
        "shape": 'square' | 'round';
        "size": 'small' | 'default' | 'large';
        "type": 'email' | 'text' | 'password';
    }
    interface BlTab {
        "active": boolean;
        "disabled": boolean;
        "label": string;
    }
    interface BlTabs {
        "openTab": (index: number) => Promise<void>;
    }
}
declare global {
    interface HTMLBlButtonElement extends Components.BlButton, HTMLStencilElement {
    }
    var HTMLBlButtonElement: {
        prototype: HTMLBlButtonElement;
        new (): HTMLBlButtonElement;
    };
    interface HTMLBlInputElement extends Components.BlInput, HTMLStencilElement {
    }
    var HTMLBlInputElement: {
        prototype: HTMLBlInputElement;
        new (): HTMLBlInputElement;
    };
    interface HTMLBlTabElement extends Components.BlTab, HTMLStencilElement {
    }
    var HTMLBlTabElement: {
        prototype: HTMLBlTabElement;
        new (): HTMLBlTabElement;
    };
    interface HTMLBlTabsElement extends Components.BlTabs, HTMLStencilElement {
    }
    var HTMLBlTabsElement: {
        prototype: HTMLBlTabsElement;
        new (): HTMLBlTabsElement;
    };
    interface HTMLElementTagNameMap {
        "bl-button": HTMLBlButtonElement;
        "bl-input": HTMLBlInputElement;
        "bl-tab": HTMLBlTabElement;
        "bl-tabs": HTMLBlTabsElement;
    }
}
declare namespace LocalJSX {
    interface BlButton {
        "class"?: 'is-primary' | 'is-dark' | 'is-light' | 'is-black' | 'is-text' | 'is-ghost' | 'is-link' | 'is-info' | 'is-success' | 'is-warning' | 'is-danger';
        "disabled"?: boolean;
        "shape"?: 'square' | 'round';
        "size"?: 'small' | 'default' | 'large';
        "type"?: 'button' | 'reset' | 'submit';
    }
    interface BlInput {
        "class"?: string;
        "disabled"?: boolean;
        "placeholder"?: string;
        "shape"?: 'square' | 'round';
        "size"?: 'small' | 'default' | 'large';
        "type"?: 'email' | 'text' | 'password';
    }
    interface BlTab {
        "active"?: boolean;
        "disabled"?: boolean;
        "label"?: string;
    }
    interface BlTabs {
        "onTabChange"?: (event: CustomEvent<any>) => void;
    }
    interface IntrinsicElements {
        "bl-button": BlButton;
        "bl-input": BlInput;
        "bl-tab": BlTab;
        "bl-tabs": BlTabs;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "bl-button": LocalJSX.BlButton & JSXBase.HTMLAttributes<HTMLBlButtonElement>;
            "bl-input": LocalJSX.BlInput & JSXBase.HTMLAttributes<HTMLBlInputElement>;
            "bl-tab": LocalJSX.BlTab & JSXBase.HTMLAttributes<HTMLBlTabElement>;
            "bl-tabs": LocalJSX.BlTabs & JSXBase.HTMLAttributes<HTMLBlTabsElement>;
        }
    }
}
